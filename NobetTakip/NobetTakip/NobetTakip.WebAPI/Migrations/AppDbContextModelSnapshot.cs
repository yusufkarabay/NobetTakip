// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NobetTakip.WebAPI;

namespace NobetTakip.WebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NobetTakip.Core.Models.Bildirim", b =>
                {
                    b.Property<Guid>("BildirimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BildirimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DegisimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.HasKey("BildirimId");

                    b.ToTable("Bildirim");
                });

            modelBuilder.Entity("NobetTakip.Core.Models.Degisim", b =>
                {
                    b.Property<Guid>("DegisimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DegisimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FirstNobetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FirstPersonelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<Guid>("IsletmeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SecondNobetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SecondPersonelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DegisimId");

                    b.HasIndex("FirstNobetId");

                    b.HasIndex("FirstPersonelId");

                    b.HasIndex("SecondNobetId");

                    b.HasIndex("SecondPersonelId");

                    b.ToTable("Degisim");
                });

            modelBuilder.Entity("NobetTakip.Core.Models.Isletme", b =>
                {
                    b.Property<Guid>("IsletmeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsletmeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("IsletmeAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsletmeKod")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IsletmeId");

                    b.HasIndex("IsletmeKod")
                        .IsUnique()
                        .HasFilter("[IsletmeKod] IS NOT NULL");

                    b.ToTable("Isletme");
                });

            modelBuilder.Entity("NobetTakip.Core.Models.Nobet", b =>
                {
                    b.Property<Guid>("NobetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NobetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IsletmeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<string>("PersonelIds")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NobetId");

                    b.HasIndex("IsletmeId");

                    b.ToTable("Nobet");
                });

            modelBuilder.Entity("NobetTakip.Core.Models.Personel", b =>
                {
                    b.Property<Guid>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GSMNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<Guid>("IsletmeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonelId");

                    b.HasIndex("IsletmeId");

                    b.HasIndex("MailAddress")
                        .IsUnique()
                        .HasFilter("[MailAddress] IS NOT NULL");

                    b.ToTable("Personel");
                });

            modelBuilder.Entity("NobetTakip.Core.Models.Degisim", b =>
                {
                    b.HasOne("NobetTakip.Core.Models.Nobet", "FirstNobet")
                        .WithMany()
                        .HasForeignKey("FirstNobetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NobetTakip.Core.Models.Personel", "FirstPersonel")
                        .WithMany()
                        .HasForeignKey("FirstPersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NobetTakip.Core.Models.Nobet", "SecondNobet")
                        .WithMany()
                        .HasForeignKey("SecondNobetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NobetTakip.Core.Models.Personel", "SecondPersonel")
                        .WithMany()
                        .HasForeignKey("SecondPersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NobetTakip.Core.Models.Nobet", b =>
                {
                    b.HasOne("NobetTakip.Core.Models.Isletme", "Isletme")
                        .WithMany()
                        .HasForeignKey("IsletmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NobetTakip.Core.Models.Personel", b =>
                {
                    b.HasOne("NobetTakip.Core.Models.Isletme", "Isletme")
                        .WithMany()
                        .HasForeignKey("IsletmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
